#
# OpenSSL example configuration file.
# This is mostly being used for generation of certificate requests.
#

# This definition stops the following lines choking if HOME isn't
# defined.
HOME							= .
RANDFILE						= $ENV::HOME/.rnd

# Extra OBJECT IDENTIFIER info:
#oid_file						= $ENV::HOME/.oid
oid_section						= new_oids

# To use this configuration file with the "-extfile" option of the
# "openssl x509" utility, name here the section containing the
# X.509v3 extensions to use:
# extensions		= 
# (Alternatively, use a configuration file that has only
# X.509v3 extensions in its main [= default] section.)


[ new_oids ]
	# We can add new OIDs in here for use by 'ca', 'req' and 'ts'.
	# Add a simple OID like this:
	# testoid1=1.2.3.4
	# Or use config file substitution like this:
	# testoid2=${testoid1}.5.6

	# Policies used by the TSA examples.
	tsa_policy1 					= 1.2.3.4.1
	tsa_policy2						= 1.2.3.4.5.6
	tsa_policy3						= 1.2.3.4.5.7

####################################################################
[ ca ]
	# `man ca`
	default_ca						= CA_root					# The default ca section
####################################################################


[ CA_root ]
	dir								= /6tb/Data/certs			# Where everything is kept
	certs							= $dir/certs				# Where the issued certs are kept
	crl_dir							= $dir/crl					# Where the issued crl are kept
	new_certs_dir					= $dir/newcerts				# default place for new certs.
	database						= $dir/index.txt			# database index file.
	serial							= $dir/serial 				# The current serial number
	RANDFILE						= $dir/private/.rand		# private random number file


	# The root key and root certificate.
	private_key						= $dir/private/ca.key.pem	# The private key
	certificate						= $dir/certs/ca.cert.pem 			# The CA certificate


	# For certificate revocation lists.
	crlnumber						= $dir/crlnumber			# the current crl number
	crl								= $dir/crl/ca.crl.pem 		# The current CRL
	crl_extensions					= crl_ext
	default_crl_days				= 30						# how long before next CRL
	x509_extensions					= usr_cert					# The extentions to add to the cert
	#unique_subject					= no						# Set to 'no' to allow creation of


	# SHA-1 is deprecated, so use SHA-2 instead.
	default_md						= sha256					# use SHA-256 by default


	name_opt 						= ca_default				# Subject Name options
	cert_opt 						= ca_default				# Certificate field options
	default_days					= 36500						# how long to certify for
	preserve						= no						# keep passed DN ordering
	policy							= policy_strict				# Policy selector
	# copy_extensions 				= copy						# Extension copying option: use with caution.


[ CA_intermediate ]
	dir								= /6tb/Data/certs/intermediate			# Where everything is kept
	certs							= $dir/certs				# Where the issued certs are kept
	crl_dir							= $dir/crl					# Where the issued crl are kept
	new_certs_dir					= $dir/newcerts				# default place for new certs.
	database						= $dir/index.txt			# database index file.
	serial							= $dir/serial 				# The current serial number
	RANDFILE						= $dir/private/.rand		# private random number file


	# The root key and root certificate.
	private_key						= $dir/private/intermediate.key.pem	# The private key
	certificate						= $dir/certs/intermediate.cert.pem 			# The CA certificate


	# For certificate revocation lists.
	crlnumber						= $dir/crlnumber			# the current crl number
	crl								= $dir/crl/intermediate.crl.pem 		# The current CRL
	crl_extensions					= crl_ext
	default_crl_days				= 30						# how long before next CRL
	x509_extensions					= usr_cert					# The extentions to add to the cert
	#unique_subject					= no						# Set to 'no' to allow creation of


	# SHA-1 is deprecated, so use SHA-2 instead.
	default_md						= sha256					# use SHA-256 by default


	name_opt 						= ca_root					# Subject Name options
	cert_opt 						= ca_root					# Certificate field options
	default_days					= 36500						# how long to certify for
	preserve						= no						# keep passed DN ordering
	policy							= policy_loose
	# copy_extensions 				= copy						# Extension copying option: use with caution.


[ policy_strict ]
	# The root CA should only sign intermediate certificates that match.
	# See the POLICY FORMAT section of `man ca`.
	countryName						= match
	stateOrProvinceName				= match
	organizationName				= match
	organizationalUnitName			= optional
	commonName						= supplied
	emailAddress					= optional


[ policy_loose ]
	# Allow the intermediate CA to sign a more diverse range of certificates.
	# See the POLICY FORMAT section of the `ca` man page.
	countryName						= optional
	stateOrProvinceName				= optional
	localityName					= optional
	organizationName				= optional
	organizationalUnitName			= optional
	commonName						= supplied
	emailAddress					= optional
####################################################################


[ req ]
	# Options for the `req` tool (`man req`).
	default_bits					= 2048
	distinguished_name				= req_distinguished_name
	string_mask 					= utf8only


	# SHA-1 is deprecated, so use SHA-2 instead.
	default_md						= sha256


	# Extension to add when the -x509 option is used.
	x509_extensions					= v3_ca						# The extentions to add to the self signed cert


	default_keyfile 				= privkey.pem
	attributes						= req_attributes


	# Passwords for private keys if not present they will be prompted for
	# input_password 				= secret
	# output_password				= secret
	# req_extensions 				= v3_req 					# The extensions to add to a certificate request


[ req_distinguished_name ]
	# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
	countryName						= Country Name (2 letter code)
	stateOrProvinceName				= State or Province Name (full name)
	localityName					= Locality Name (eg, city)
	0.organizationName				= Organization Name (eg, company)
	#1.organizationName				= Second Organization Name (eg, company)
	organizationalUnitName			= Organizational Unit Name (eg, section)
	commonName						= Common Name (eg, your name or your server\'s hostname)
	emailAddress					= Email Address


	# Optionally, specify some defaults.
	countryName_default				= FI
	stateOrProvinceName_default		= Finland
	localityName_default			= Espoo
	0.organizationName_default		= Project.J
	#1.organizationName_default		= Second Organization Name
	organizationalUnitName_default	= IT
	emailAddress_default           	= certificates@cerberus.lan


	# Option settings
	countryName_min					= 2
	countryName_max					= 2
	commonName_max					= 64
	emailAddress_max				= 64
	# SET-ex3						= SET extension number 3


[ req_attributes ]
	challengePassword				= A challenge password
	challengePassword_min			= 4
	challengePassword_max			= 20
	unstructuredName				= An optional company name


[ server_cert ]
	# Extensions for server certificates (`man x509v3_config`).
	basicConstraints 				= CA:FALSE
	nsCertType 						= server
	nsComment 						= "Nothing to see here"
	subjectKeyIdentifier 			= hash
	authorityKeyIdentifier 			= keyid,issuer:always
	keyUsage 						= critical, digitalSignature, keyEncipherment
	extendedKeyUsage 				= serverAuth


[ usr_cert ]
	# Extensions for client certificates (`man x509v3_config`).
	basicConstraints				= CA:FALSE
	# nsCertType					= server					# This is OK for an SSL server.
	# nsCertType 					= objsign					# For an object signing certificate this would be used.
	nsCertType 						= client, email				# For normal client use this is typical
	# nsCertType 					= client, email, objsign	# and for everything including object signing
	nsComment						= "Nothing to see here"		# This will be displayed in Netscape's comment listbox.
	subjectKeyIdentifier			= hash
	authorityKeyIdentifier			= keyid,issuer
	keyUsage 						= critical, nonRepudiation, digitalSignature, keyEncipherment # This is typical in keyUsage for a client certificate.
	extendedKeyUsage 				= clientAuth, emailProtection
	#extendedKeyUsage 				= critical, timeStamping	# This is required for TSA certificates.


	# This stuff is for subjectAltName and issuerAltname.
	#subjectAltName					= email:copy				# Import the email address.
	#An alternative to produce certificates that aren't deprecated according to PKIX.
	#subjectAltName					= email:move
	#issuerAltName					= issuer:copy				# Copy subject details


	#nsCaRevocationUrl				= http://www.domain.dom/ca-crl.pem
	#nsBaseUrl
	#nsRevocationUrl
	#nsRenewalUrl
	#nsCaPolicyUrl
	#nsSslServerName


[ v3_req ]
	# Extensions to add to a certificate request
	basicConstraints = CA:FALSE
	keyUsage = nonRepudiation, digitalSignature, keyEncipherment


[ v3_ca ]
	# Extensions for a typical CA (`man x509v3_config`).
	subjectKeyIdentifier			= hash
	authorityKeyIdentifier			= keyid:always,issuer
	basicConstraints 				= critical, CA:true
	keyUsage						= critical, digitalSignature, cRLSign, keyCertSign


[ v3_intermediate_ca ]
	# Extensions for a typical intermediate CA (`man x509v3_config`).
	subjectKeyIdentifier 			= hash
	authorityKeyIdentifier 			= keyid:always,issuer
	basicConstraints 				= critical, CA:true
	keyUsage 						= critical, digitalSignature, cRLSign, keyCertSign


[ crl_ext ]
	# Extension for CRLs (`man x509v3_config`).
	# CRL extensions.
	# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.
	# issuerAltName=issuer:copy
	authorityKeyIdentifier			= keyid:always

	
[ ocsp ]
	# Extension for OCSP signing certificates (`man ocsp`).
	basicConstraints = CA:FALSE
	subjectKeyIdentifier = hash
	authorityKeyIdentifier = keyid,issuer
	keyUsage = critical, digitalSignature
	extendedKeyUsage = critical, OCSPSigning


[ proxy_cert_ext ]
	# These extensions should be added when creating a proxy certificate
	# This goes against PKIX guidelines but some CAs do it and some software
	# requires this to avoid interpreting an end user certificate as a CA.
	basicConstraints=CA:FALSE
	# Here are some examples of the usage of nsCertType. If it is omitted
	# the certificate can be used for anything *except* object signing.
	# This is OK for an SSL server.
	# nsCertType			= server
	# For an object signing certificate this would be used.
	# nsCertType = objsign
	# For normal client use this is typical
	# nsCertType = client, email
	# and for everything including object signing:
	# nsCertType = client, email, objsign
	# This is typical in keyUsage for a client certificate.
	# keyUsage = nonRepudiation, digitalSignature, keyEncipherment
	# This will be displayed in Netscape's comment listbox.
	nsComment			= "OpenSSL Generated Certificate"
	# PKIX recommendations harmless if included in all certificates.
	subjectKeyIdentifier=hash
	authorityKeyIdentifier=keyid,issuer
	# This stuff is for subjectAltName and issuerAltname.
	# Import the email address.
	# subjectAltName=email:copy
	# An alternative to produce certificates that aren't
	# deprecated according to PKIX.
	# subjectAltName=email:move
	# Copy subject details
	# issuerAltName=issuer:copy
	#nsCaRevocationUrl		= http://www.domain.dom/ca-crl.pem
	#nsBaseUrl
	#nsRevocationUrl
	#nsRenewalUrl
	#nsCaPolicyUrl
	#nsSslServerName
	# This really needs to be in place for it to be a proxy certificate.
	proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo
####################################################################


[ tsa ]
	default_tsa = tsa_config1	# the default TSA section

	
[ tsa_config1 ]
	# These are used by the TSA reply generation only.
	dir		= ./demoCA		# TSA root directory
	serial		= $dir/tsaserial	# The current serial number (mandatory)
	crypto_device	= builtin		# OpenSSL engine to use for signing
	signer_cert	= $dir/tsacert.pem 	# The TSA signing certificate
	# (optional)
	certs		= $dir/cacert.pem	# Certificate chain to include in reply
	# (optional)
	signer_key	= $dir/private/tsakey.pem # The TSA private key (optional)
	default_policy	= tsa_policy1		# Policy if request did not specify it
	# (optional)
	other_policies	= tsa_policy2, tsa_policy3	# acceptable policies (optional)
	digests		= sha1, sha256, sha384, sha512	# Acceptable message digests (mandatory)
	accuracy	= secs:1, millisecs:500, microsecs:100	# (optional)
	clock_precision_digits  = 0	# number of digits after dot. (optional)
	ordering		= yes	# Is ordering defined for timestamps?
	# (optional, default: no)
	tsa_name		= yes	# Must the TSA name be included in the reply?
	# (optional, default: no)
	ess_cert_id_chain	= no	# Must the ESS cert id chain be included?
	# (optional, default: no)